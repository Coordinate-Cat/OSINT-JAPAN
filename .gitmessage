# <type>(<scope>): <subject>
#
# <body>
#
# <footer>

# ==== Commit Message Guidelines ====
# Write commit messages in English
#
# Type: Choose one of the following
#   feat:     A new feature
#   fix:      A bug fix
#   docs:     Documentation only changes
#   style:    Changes that do not affect the meaning of the code
#   refactor: A code change that neither fixes a bug nor adds a feature
#   perf:     A code change that improves performance
#   test:     Adding missing tests or correcting existing tests
#   chore:    Changes to the build process or auxiliary tools
#   ci:       Changes to CI configuration files and scripts
#   build:    Changes that affect the build system or external dependencies
#   revert:   Reverts a previous commit
#
# Scope (optional): The area of the codebase affected
#   Examples: auth, ui, api, database, config, etc.
#
# Subject: Brief description (50 characters or less)
#   - Use imperative mood ("Add feature" not "Added feature")
#   - Don't capitalize the first letter
#   - Don't end with a period
#
# Body (optional): Explain what and why
#   - Wrap at 72 characters
#   - Use imperative mood
#   - Include motivation for the change
#
# Footer (optional): Reference issues and breaking changes
#   - Reference issues: "Closes #123", "Fixes #456"
#   - Breaking changes: "BREAKING CHANGE: <description>"
#
# ==== Examples ====
# feat(auth): add OAuth2 login functionality
# fix(ui): resolve button alignment issue on mobile
# docs: update API documentation for user endpoints
# refactor(database): optimize user query performance
# test(auth): add unit tests for login validation
